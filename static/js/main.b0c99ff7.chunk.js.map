{"version":3,"sources":["api/api.ts","components/Login/Login.module.css","redux/auth-reducer.ts","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","components/Navbar/Friend/Friend.module.css","components/Header/Header.module.css","components/common/Paginator/paginator.module.css","redux/profile-reducer.ts","assets/images/user.png","redux/dialogs-reducer.ts","components/Users/users.module.css","redux/app-reducer.ts","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/Navbar/Friend/Friends.tsx","components/Navbar/NavbarContainer.tsx","components/Navbar/Navbar.tsx","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","redux/sidebar-reducer.ts","redux/redux-store.ts","App.tsx","index.tsx"],"names":["instance","axios","create","withCredentials","baseURL","headers","usersURL","getUsers","currentPage","pageSize","get","follow","userId","post","then","response","data","unfollow","delete","profileURL","getProfile","getStatus","updateStatus","status","put","authURL","me","login","loginModel","logout","module","exports","initialState","id","email","isAuth","authReducer","state","action","type","payload","setAuthUserDataAC","setAuthUserDataTC","dispatch","a","resultCode","loginTC","password","rememberMe","messages","length","setNetworkErrorAC","logoutTC","Preloader","src","preloader","style","width","height","posts","message","likesCount","profile","profileReducer","newPost","value","trim","addPostAC","setUserStatusAC","getUserProfileTC","toggleIsFetchingAC","getUserStatusTC","updateUserStatusTC","dialogsItem","name","dialogsReducer","newMessage","addMessageAC","isFetching","networkError","initializedSuccess","appReducer","error","initializedAppTC","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Music","News","Settings","Friends","props","className","s","fr","friends","map","f","avatar","alt","NavbarContainer","connect","sidebar","nav","item","to","activeClassName","active","friend","users","totalCount","isDisabled","portionSize","followAC","isDisabledAC","followUnfollowFlow","apiMethod","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","p","n","e","onPageChanged","selectedPage","User","user","photos","small","userPhoto","photoUser","followed","onClickUnfollowHandler","disabled","some","onClickFollowHandler","Users","u","usersPage","getPageSize","getTotalCount","getCurrentPage","getIsDisabled","UsersContainer","setCurrentPage","this","React","Component","compose","app","bind","page","items","Header","head","logo","loginBlock","HeaderContainer","auth","LoginForm","onSubmit","formik","useFormik","initialValues","validate","values","errors","test","resetForm","handleSubmit","form","loginData","getFieldProps","placeholder","touched","checked","loginButton","setNetworkError","loginContainer","loginHeader","rootReducer","combineReducers","dialogsPage","profilePage","store","createStore","applyMiddleware","thunk","ProfileContainer","lazy","Dialogs","App","initializedApp","initialized","Suspense","fallback","path","render","AppContainer","withRouter","MainApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0c99ff7.chunk.js","sourcesContent":["import axios, {AxiosResponse} from \"axios\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\nimport {UserProfileType} from \"../redux/profile-reducer\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        withCredentials: true,\r\n        baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n        headers: {\"API-KEY\": \"4fa630d1-6fae-4037-80dd-d195b9c3e03c\"},\r\n    }\r\n)\r\n\r\n//api\r\nexport const usersURL = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UsersSetResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<ResponseType>(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete<ResponseType>(`follow/${userId}`).then(response => response.data)\r\n    },\r\n}\r\nexport const profileURL = {\r\n    getProfile(userId: number) {\r\n        return instance.get<UserProfileType>(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put <{ status: string }, AxiosResponse<ResponseType>>(\"profile/status\", {status})\r\n    },\r\n}\r\nexport const authURL = {\r\n    me() {\r\n        return instance.get<ResponseType<AuthenticatedUserData>>(\"auth/me\")\r\n    },\r\n    login(loginModel: LoginRequestType) {\r\n        return instance.post<LoginRequestType, AxiosResponse<ResponseType<{ userId: number }>>>(\"auth/login\", loginModel)\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType>(\"auth/login\")\r\n    },\r\n}\r\n\r\n//types\r\nexport type UsersSetResponseType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: null\r\n}\r\ntype AuthenticatedUserData = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\nexport type ResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: Array<string>,\r\n    data: T\r\n}\r\ntype LoginRequestType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__23HLq\",\"loginHeader\":\"Login_loginHeader__18B7P\",\"form\":\"Login_form__1i_Gc\",\"loginData\":\"Login_loginData__26YM1\",\"error\":\"Login_error__3XPlv\",\"loginButton\":\"Login_loginButton__2IlKP\"};","import {ThunkType} from \"./redux-store\";\r\nimport {authURL} from \"../api/api\";\r\nimport {setNetworkErrorAC} from \"./app-reducer\";\r\n\r\nconst initialState: AuthStateType = {\r\n    id: null,\r\n    login: \"\",\r\n    email: \"\",\r\n    isAuth: false,\r\n};\r\n\r\nexport const authReducer = (state: AuthStateType = initialState, action: AuthActionsType): AuthStateType => {\r\n    switch (action.type) {\r\n        case \"AUTH/SET-USER-DATA\": {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//actions\r\nexport const setAuthUserDataAC = (id: number | null, login: string, email: string, isAuth: boolean) => {\r\n    return {\r\n        type: \"AUTH/SET-USER-DATA\",\r\n        payload: {id, login, email, isAuth}\r\n    } as const\r\n};\r\n\r\n//thunks\r\nexport const setAuthUserDataTC = (): ThunkType => async (dispatch) => {\r\n    const response = await authURL.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserDataAC(id, login, email, true))\r\n    }\r\n}\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean): ThunkType => async (dispatch) => {\r\n    const response = await authURL.login({email, password, rememberMe})\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserDataTC())\r\n    } else {\r\n        if (response.data.messages.length) {\r\n            dispatch(setNetworkErrorAC(response.data.messages[0]))\r\n        } else {\r\n            dispatch(setNetworkErrorAC(\"Some error occurred\"))\r\n        }\r\n    }\r\n}\r\nexport const logoutTC = (): ThunkType => async (dispatch) => {\r\n    const response = await authURL.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserDataAC(null, '', '', false))\r\n    }\r\n}\r\n\r\n//types\r\nexport  type AuthStateType = {\r\n    id: number | null\r\n    login: string\r\n    email: string\r\n    isAuth: boolean\r\n};\r\nexport type setAuthUserDataACType = ReturnType<typeof setAuthUserDataAC>\r\nexport type AuthActionsType = setAuthUserDataACType","export default __webpack_public_path__ + \"static/media/preloader.b75b820d.gif\";","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} style={{width: '100px', height: '100px'}}/>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fr\":\"Friend_fr__3ImiB\",\"f\":\"Friend_f__1Fs2f\",\"avatar\":\"Friend_avatar__1cnO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Header_head__2Vls1\",\"logo\":\"Header_logo__28Fqy\",\"loginBlock\":\"Header_loginBlock__22z1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__33EXC\",\"selectedPage\":\"paginator_selectedPage__3TEBh\"};","import {PhotosType} from \"./users-reducer\";\r\nimport {ThunkType} from \"./redux-store\";\r\nimport {profileURL} from \"../api/api\";\r\nimport {toggleIsFetchingAC} from \"./app-reducer\";\r\n\r\nlet initialState: StateProfileType = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you\", likesCount: 15},\r\n        {id: 2, message: \"It's my first post\", likesCount: 30}\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReducer = (state: StateProfileType = initialState, action: ProfileActionsType): StateProfileType => {\r\n    switch (action.type) {\r\n        case \"PROFILE/ADD-POST\": {\r\n            let newPost: PostType = {\r\n                id: 5,\r\n                message: action.value,\r\n                likesCount: 0\r\n            };\r\n            if (action.value.trim()) {\r\n                return {\r\n                    ...state,\r\n                    posts: [...state.posts, newPost],\r\n                };\r\n            }\r\n            return state;\r\n        }\r\n        case \"PROFILE/SET-USER-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case \"PROFILE/SET-USER-STATUS\": {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addPostAC = (value: string) => {\r\n    return {type: \"PROFILE/ADD-POST\", value} as const\r\n}\r\nexport const setUserProfileAC = (profile: UserProfileType) => {\r\n    return {type: \"PROFILE/SET-USER-PROFILE\", profile} as const\r\n}\r\nexport const setUserStatusAC = (status: string) => {\r\n    return {type: \"PROFILE/SET-USER-STATUS\", status} as const\r\n}\r\n\r\n\r\n//thunks\r\nexport const getUserProfileTC = (userId: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n    let response = await profileURL.getProfile(userId)\r\n    dispatch(toggleIsFetchingAC(false))\r\n    dispatch(setUserProfileAC(response.data))\r\n}\r\nexport const getUserStatusTC = (userId: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n    const response = await profileURL.getStatus(userId)\r\n    dispatch(setUserStatusAC(response.data))\r\n    dispatch(toggleIsFetchingAC(false))\r\n}\r\nexport const updateUserStatusTC = (status: string): ThunkType => async (dispatch) => {\r\n    const response = await profileURL.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatusAC(status))\r\n    }\r\n}\r\n\r\n//types\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\ntype ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string,\r\n    mainLink: string\r\n}\r\nexport type UserProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n    aboutMe: string\r\n}\r\nexport type StateProfileType = {\r\n    posts: Array<PostType>\r\n    profile: UserProfileType | null\r\n    status: string\r\n}\r\nexport type ProfileActionsType =\r\n    | ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof setUserStatusAC>\r\n","export default __webpack_public_path__ + \"static/media/user.bfbbbdea.png\";","let initialState: StateDialogsType = {\r\n    dialogsItem: [\r\n        {id: \"1\", name: \"Victoria\"},\r\n        {id: \"2\", name: \"Diana\"},\r\n        {id: \"3\", name: \"Irina\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you?\"},\r\n        {id: 3, message: \"Yo\"}\r\n    ],\r\n}\r\n\r\nexport const dialogsReducer = (state: StateDialogsType = initialState, action: DialogsActionsType): StateDialogsType => {\r\n    switch (action.type) {\r\n        case \"DIALOGS/ADD-MESSAGE\": {\r\n            let newMessage: MessageType = {\r\n                id: 4,\r\n                message: action.value,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addMessageAC = (value: string) => {\r\n    return {type: \"DIALOGS/ADD-MESSAGE\", value} as const\r\n}\r\n\r\n//types\r\nexport type DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type StateDialogsType = {\r\n    dialogsItem: Array<DialogItemType>\r\n    messages: Array<MessageType>\r\n}\r\nexport type  DialogsActionsType =\r\n    | ReturnType<typeof addMessageAC>\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoUser\":\"users_photoUser__3nQ1g\"};","import {ThunkType} from \"./redux-store\";\r\nimport {setAuthUserDataTC} from \"./auth-reducer\";\r\n\r\nconst initialState: AppStateType = {\r\n    isFetching: false,                    // isLoading - крутилка\r\n    networkError: \"\",\r\n    initializedSuccess: false,\r\n}\r\n\r\nexport const appReducer = (state: AppStateType = initialState, action: AppActionsType): AppStateType => {\r\n    switch (action.type) {\r\n        case \"APP/TOGGLE-IS-FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"APP/SET-NETWORK-ERROR\": {\r\n            return {...state, networkError: action.error}\r\n        }\r\n        case \"APP/SET-INITIALIZED-SUCCESS\": {\r\n            return {...state, initializedSuccess: true}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => {\r\n    return {type: \"APP/TOGGLE-IS-FETCHING\", isFetching} as const\r\n}\r\nexport const setNetworkErrorAC = (error: string) => {\r\n    return {type: \"APP/SET-NETWORK-ERROR\", error} as const\r\n}\r\nexport const setInitializedSuccessAC = () => {\r\n    return {type: \"APP/SET-INITIALIZED-SUCCESS\"} as const\r\n}\r\n\r\n//thunks\r\nexport const initializedAppTC = (): ThunkType => (dispatch) => {\r\n    const promise = dispatch(setAuthUserDataTC())\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(setInitializedSuccessAC())\r\n    })\r\n}\r\n\r\n//types\r\nexport type AppStateType = {\r\n    isFetching: boolean\r\n    networkError: string\r\n    initializedSuccess: boolean\r\n}\r\nexport type AppActionsType =\r\n    | ReturnType<typeof toggleIsFetchingAC>\r\n    | ReturnType<typeof setNetworkErrorAC>\r\n    | ReturnType<typeof setInitializedSuccessAC>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2Bfmy\",\"item\":\"Navbar_item__1kVKQ\",\"active\":\"Navbar_active__IHsd-\",\"friends\":\"Navbar_friends__1YYSG\",\"friend\":\"Navbar_friend__3y1D-\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\ntype MusicTypeProps = {\r\n\r\n}\r\n\r\nexport const Music = () => {\r\n    return(\r\n        <div>\r\n          Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\ntype NewsTypeProps = {\r\n\r\n}\r\n\r\nexport const News = () => {\r\n    return(\r\n        <div>\r\n          News\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\ntype SettingsTypeProps = {\r\n\r\n}\r\n\r\nexport const Settings = () => {\r\n    return(\r\n        <div>\r\n          Settings\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Friend.module.css';\r\n\r\ntype FriendType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\ntype FriendPropsType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nexport const Friends = (props: FriendPropsType) => {\r\n    return (\r\n        <div className={s.fr}>\r\n            {props.friends.map(f => {\r\n                return (\r\n                    <div key={f.id} className={s.f}>\r\n                        <div><img className={s.avatar} src={f.avatar} alt=\"\"/></div>\r\n                        <div> {f.name}</div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport {Navbar} from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {initialStateSadBarType} from \"../../redux/sidebar-reducer\";\r\n\r\n\r\ntype NavbarContainerTypeProps = {}\r\n\r\n/*\r\nexport const NavbarContainer = (props: NavbarContainerTypeProps) => {\r\n\r\n    return (<StoreContext.Consumer>\r\n        {(store) => {\r\n            let state = store.getState()\r\n            return <Navbar sidebar={state.sidebar}/>\r\n        }}\r\n    </StoreContext.Consumer>)\r\n}*/\r\n\r\ntype mapStateToPropsType = {\r\n    sidebar: initialStateSadBarType\r\n}\r\n\r\ntype mapDispatchToPropsType = {}\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStateToPropsType => {\r\n    return {\r\n        sidebar: state.sidebar\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {}\r\n}\r\n\r\nexport const NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport type NavbarTypeProps = mapStateToPropsType & mapDispatchToPropsType;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\nimport {Friends} from \"./Friend/Friends\";\r\nimport {NavbarTypeProps} from \"./NavbarContainer\";\r\n\r\n\r\nexport const Navbar = (props: NavbarTypeProps) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}> Profile </NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active}> Messages </NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/users\" activeClassName={s.active}> Users </NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/news\" activeClassName={s.active}> News </NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/music\" activeClassName={s.active}> Music </NavLink></div>\r\n            <div className={s.item}><NavLink to=\"/settings\" activeClassName={s.active}> Settings </NavLink></div>\r\n\r\n            <div className={s.friends}>\r\n                Friends\r\n                <div className={s.friend}>\r\n                    <Friends friends={props.sidebar.friends}/>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import {RootActionsType, ThunkType} from \"./redux-store\";\r\nimport {ResponseType, usersURL} from \"../api/api\";\r\nimport {toggleIsFetchingAC} from \"./app-reducer\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState: UsersStateType = {\r\n    users: [],\r\n    totalCount: 0,                        //количество всех пользователей(с сервера)\r\n    error: null,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isDisabled: [],\r\n    portionSize: 10,\r\n}\r\n\r\nexport const usersReducer = (state: UsersStateType = initialState, action: UsersActionsType): UsersStateType => {\r\n    switch (action.type) {\r\n        case \"USERS/FOLLOW-UNFOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: !u.followed} : u)\r\n            }\r\n        }\r\n        case \"USERS/SET-USERS\": {\r\n            return {...state, users: action.users}\r\n        }\r\n        case  \"USERS/SET-CURRENT-PAGE\": {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"USERS/SET-TOTAL-USERS-COUNT\": {\r\n            return {...state, totalCount: action.totalCount}\r\n        }\r\n        case \"USERS/IS-DISABLED-FOLLOWING-PROGRESS\": {\r\n            return {\r\n                ...state,\r\n                isDisabled: action.isFetching ? [...state.isDisabled, action.userId] : state.isDisabled.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const followAC = (userId: number) => {\r\n    return {type: \"USERS/FOLLOW-UNFOLLOW\", userId} as const\r\n}\r\nexport const setUsersAC = (users: Array<UserType>) => {\r\n    return {type: \"USERS/SET-USERS\", users} as const\r\n}\r\nexport const setCurrentPageAC = (currentPage: number) => {\r\n    return {type: \"USERS/SET-CURRENT-PAGE\", currentPage} as const\r\n}\r\nexport const setTotalUsersCountAC = (totalCount: number) => {\r\n    return {type: \"USERS/SET-TOTAL-USERS-COUNT\", totalCount} as const\r\n}\r\nexport const isDisabledAC = (userId: number, isFetching: boolean) => {\r\n    return {type: \"USERS/IS-DISABLED-FOLLOWING-PROGRESS\", userId, isFetching} as const\r\n}\r\n\r\n//common functions\r\nconst followUnfollowFlow =\r\n    async (dispatch: Dispatch<RootActionsType>, userId: number, apiMethod: APIMethodType) => {\r\n        const data = await apiMethod(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(followAC(userId))\r\n        }\r\n        dispatch(isDisabledAC(userId, false))\r\n    }\r\n\r\n//thunks\r\nexport const getUsersTC = (page: number, pageSize: number): ThunkType => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n    const data = await usersURL.getUsers(page, pageSize)\r\n    dispatch(setUsersAC(data.data.items))\r\n    dispatch(setTotalUsersCountAC(data.data.totalCount))\r\n    dispatch(toggleIsFetchingAC(false))\r\n}\r\nexport const followTC = (userId: number): ThunkType => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersURL.follow.bind(userId))\r\n}\r\nexport const unfollowTC = (userId: number): ThunkType => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersURL.unfollow.bind(userId))\r\n}\r\n\r\n//types\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: PhotosType\r\n    followed: boolean\r\n}\r\nexport type UsersStateType = {\r\n    users: Array<UserType>\r\n    totalCount: number\r\n    error: null\r\n    pageSize: number\r\n    currentPage: number\r\n    isDisabled: Array<number>\r\n    portionSize: number\r\n}\r\ntype APIMethodType = (userId: number) => Promise<ResponseType>\r\nexport type UsersActionsType =\r\n    | ReturnType<typeof followAC>\r\n    | ReturnType<typeof setUsersAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalUsersCountAC>\r\n    | ReturnType<typeof isDisabledAC>","import React, {MouseEvent, useState} from \"react\";\r\nimport s from \"./paginator.module.css\";\r\n\r\nexport const Paginator = (props: PaginatorPropsType) => {\r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / props.portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * props.pageSize + 1\r\n    const rightPortionPageNumber = portionNumber * props.pageSize\r\n\r\n    const prevOnClickHandler = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n    const nextOnClickHandler = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n    }\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 && <button onClick={prevOnClickHandler}>PREV</button>}\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(n => {\r\n                let onClickHandler = (e: MouseEvent<HTMLSpanElement>) => {\r\n                    props.onPageChanged(n)\r\n                }\r\n                return <span onClick={onClickHandler}\r\n                             className={props.currentPage === n ? s.selectedPage : ''}>{n} </span>\r\n            })\r\n        }\r\n        {portionCount > portionNumber && <button onClick={nextOnClickHandler}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\n//types\r\ntype PaginatorPropsType = {\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    onPageChanged: (currentPage: number) => void\r\n    portionSize: number\r\n}","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\nexport const User = (props: UserPropsType) => {\r\n    return <div>\r\n                            <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + props.user.id}>\r\n                            <img src={props.user.photos.small !== null ? props.user.photos.small : userPhoto}\r\n                                 className={s.photoUser}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div> {props.user.followed ?\r\n                            <button onClick={props.onClickUnfollowHandler}\r\n                                    disabled={props.isDisabled.some(id => id === props.user.id)}> FOLLOW </button>\r\n                            : <button onClick={props.onClickFollowHandler}\r\n                                      disabled={props.isDisabled.some(id => id === props.user.id)}> UNFOLLOW </button>}\r\n                            </div>\r\n                    </span>\r\n        <span>\r\n                        <span>\r\n                            <div>{props.user.name}</div>\r\n                            <div>{props.user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                        </span>\r\n                    </span>\r\n    </div>\r\n}\r\n\r\n//types\r\ntype UserPropsType = {\r\n    user: UserType\r\n    onClickUnfollowHandler: () => void\r\n    onClickFollowHandler: () => void\r\n    isDisabled: Array<number>\r\n}","import React from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n    return <div>\r\n        <Paginator onPageChanged={props.onPageChanged} pageSize={props.pageSize} currentPage={props.currentPage}\r\n                   totalCount={props.totalCount} portionSize={props.portionSize}/>\r\n        {\r\n            props.users.map(u => {\r\n                const onClickFollowHandler = () => {\r\n                    props.follow(u.id)\r\n                }\r\n                const onClickUnfollowHandler = () => {\r\n                    props.unfollow(u.id)\r\n                }\r\n                return <User key={u.id}\r\n                             user={u}\r\n                             onClickUnfollowHandler={onClickUnfollowHandler}\r\n                             onClickFollowHandler={onClickFollowHandler}\r\n                             isDisabled={props.isDisabled}/>\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\n//types\r\ntype UsersPropsType = {\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isDisabled: Array<number>\r\n    users: Array<UserType>\r\n    onPageChanged: (currentPage: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    portionSize: number\r\n}","import {RootStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: RootStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state: RootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalCount = (state: RootStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\nexport const getCurrentPage = (state: RootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsDisabled = (state: RootStateType) => {\r\n    return state.usersPage.isDisabled\r\n}","import React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    UserType, setCurrentPageAC, getUsersTC, followTC, unfollowTC\r\n} from \"../../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {getCurrentPage, getIsDisabled, getPageSize, getTotalCount, getUsers} from \"../../redux/users-selectors\";\r\n\r\nexport class UsersContainer extends React.Component<UsersContainerPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (currentPage: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.setCurrentPage(currentPage);\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalCount={this.props.totalCount}\r\n                currentPage={this.props.currentPage}\r\n                pageSize={this.props.pageSize}\r\n                users={this.props.users}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                isDisabled={this.props.isDisabled}\r\n                portionSize={this.props.portionSize}\r\n            />\r\n        </>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: state.app.isFetching,\r\n        isDisabled: getIsDisabled(state),\r\n        portionSize: state.usersPage.portionSize\r\n    }\r\n};\r\n\r\nexport default compose<ComponentType>(connect(mapStateToProps, {\r\n    follow: followTC,\r\n    unfollow: unfollowTC,\r\n    setCurrentPage: setCurrentPageAC,\r\n    getUsers: getUsersTC,\r\n}))(UsersContainer);\r\n\r\n//types\r\ntype mapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isDisabled: Array<number>\r\n    portionSize: number\r\n}\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    getUsers: (page: number, pageSize: number) => void\r\n}\r\nexport type UsersContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\nimport {ThunkType} from \"../../redux/redux-store\";\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <header className={s.head}>\r\n            <div className={s.logo}>\r\n                By Viktoria...\r\n                <span className={s.loginBlock}>\r\n                    {props.isAuth ?\r\n                        <div>\r\n                            {props.login}\r\n                            <button onClick={props.logout}>Log out</button>\r\n                        </div>\r\n                        : <NavLink to={'/login'}>LOGIN</NavLink>}\r\n                           </span>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n//types\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n    logout: () => ThunkType\r\n}","import React, {ComponentType} from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType, ThunkType} from \"../../redux/redux-store\";\r\nimport {logoutTC} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\nexport default compose<ComponentType>(connect(mapStateToProps, {\r\n    logout: logoutTC\r\n}))(HeaderContainer)\r\n\r\n//types\r\ntype mapStatePropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\ntype mapDispatchPropsType = {\r\n    logout: () => ThunkType\r\n}\r\ntype HeaderContainerPropsType = mapStatePropsType & mapDispatchPropsType","import {useFormik} from \"formik\";\r\nimport s from \"./Login.module.css\";\r\nimport React from \"react\";\r\nimport {ThunkType} from \"../../redux/redux-store\";\r\n\r\nexport const LoginForm = ({onSubmit, networkError}: LoginFormPropsType) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Must be 4 characters or more';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            onSubmit(formik.values.email, formik.values.password, formik.values.rememberMe)\r\n            formik.resetForm()\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={s.form}>\r\n            <div className={s.loginData}>\r\n                <input\r\n                    {...formik.getFieldProps('email')}\r\n                    placeholder={\"Email\"}\r\n                />\r\n                {formik.touched.email && formik.errors.email && <div className={s.error}>{formik.errors.email}</div>}\r\n            </div>\r\n            <div className={s.loginData}>\r\n                <input\r\n                    type=\"password\"\r\n                    {...formik.getFieldProps('password')}\r\n                    placeholder={\"Password\"}\r\n                />\r\n                {formik.touched.password && formik.errors.password &&\r\n                <div className={s.error}>{formik.errors.password}</div>}\r\n            </div>\r\n            <div className={s.rememberMe}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={formik.values.rememberMe}\r\n                    {...formik.getFieldProps('rememberMe')}\r\n                />\r\n                <label>Remember me</label>\r\n            </div>\r\n            <div>\r\n                {networkError}\r\n            </div>\r\n            <button type=\"submit\" className={s.loginButton}>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n//types\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\ntype LoginFormPropsType = {\r\n    onSubmit: (email: string, password: string, rememberMe: boolean) => ThunkType\r\n    networkError: string\r\n}","import React, {ComponentType} from \"react\";\r\nimport s from \"./Login.module.css\";\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {RootStateType, ThunkType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {setNetworkErrorAC} from \"../../redux/app-reducer\";\r\n\r\nconst Login = ({isAuth, networkError, setNetworkError, login}: LoginPropsType) => {\r\n    if (isAuth) {\r\n        if (networkError) {\r\n            setNetworkError('')\r\n        }\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div className={s.loginContainer}>\r\n        <h1 className={s.loginHeader}>Login</h1>\r\n        <LoginForm onSubmit={login} networkError={networkError}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        networkError: state.app.networkError,\r\n    }\r\n}\r\nexport default compose<ComponentType>(connect(mapStateToProps, {\r\n    login: loginTC,\r\n    setNetworkError: setNetworkErrorAC,\r\n}))(Login)\r\n\r\n//types\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    networkError: string\r\n}\r\ntype mapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => ThunkType\r\n    setNetworkError: (error: string) => void\r\n}\r\ntype LoginPropsType = mapStateToPropsType & mapDispatchToPropsType","export type initialStateSadBarType = typeof initialState\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Irina', avatar: 'https://img.joinfo.com/i/2018/04/5ad83d406a33d.jpg'},\r\n        {id: 2, name: 'Diana', avatar: 'https://kor.ill.in.ua/m/610x385/2254601.jpg'},\r\n        {\r\n            id: 3,\r\n            name: 'Max',\r\n            avatar: 'https://i.pinimg.com/originals/0e/41/52/0e4152973ef78326aca365659e8d97a8.png'\r\n        }\r\n    ]\r\n}\r\n\r\nexport const sidebarReducer = (state: initialStateSadBarType = initialState, action: any): initialStateSadBarType => {\r\n    return state\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {DialogsActionsType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./profile-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {UsersActionsType, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionsType, authReducer} from \"./auth-reducer\";\r\nimport {AppActionsType, appReducer} from \"./app-reducer\";\r\nimport thunk, {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\n\r\nlet rootReducer = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\n/*const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))*/\r\n\r\n//types\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\nexport type RootActionsType =\r\n    | UsersActionsType\r\n    | AppActionsType\r\n    | AuthActionsType\r\n    | ProfileActionsType\r\n    | DialogsActionsType\r\nexport type ThunkType<ReturnType = void> = ThunkAction<ReturnType, RootStateType, unknown, RootActionsType>\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\n//import Dialogs from \"./components/Dialogs/DialogsContainer\";\r\nimport {NavbarContainer} from \"./components/Navbar/NavbarContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n//import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\"\r\nimport {initializedAppTC} from \"./redux/app-reducer\";\r\nimport {RootStateType, store} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\n\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\r\nconst Dialogs = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializedApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <NavbarContainer/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <React.Suspense fallback={<Preloader/>}>\r\n                        <Route path={\"/profile/:userId?\"} render={() => <ProfileContainer/>}/>\r\n                        <Route path={\"/dialogs\"} render={() => <Dialogs/>}/>\r\n                        <Route path={\"/music\"} render={() => <Music/>}/>\r\n                        <Route path={\"/news\"} render={() => <News/>}/>\r\n                        <Route path={\"/settings\"} render={() => <Settings/>}/>\r\n                        <Route path={\"/users\"} render={() => <UsersContainer/>}/>\r\n                        <Route path={\"/login\"} render={() => <Login/>}/>\r\n                    </React.Suspense>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} //- в URL profile даем название URI параметру\r\n\r\nconst mapStateToProps = (state: RootStateType): mapStatePropsType => {\r\n    return {\r\n        initialized: state.app.initializedSuccess,\r\n    }\r\n}\r\nconst AppContainer = compose<ComponentType>(withRouter, connect(mapStateToProps, {\r\n    initializedApp: initializedAppTC,\r\n}))(App)\r\n//чтобы Routes нормально работали, надо обернуть компонент в withRouter\r\nexport const MainApp = () => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}><AppContainer/></Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\n//types\r\ntype mapDispatchPropsType = {\r\n    initializedApp: () => void\r\n}\r\ntype mapStatePropsType = {\r\n    initialized: boolean\r\n}\r\ntype  AppPropsType = mapDispatchPropsType & mapStatePropsType","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {MainApp} from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <MainApp/>,\r\n    document.getElementById('root'));\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}